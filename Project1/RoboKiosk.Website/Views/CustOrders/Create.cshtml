@model RoboKiosk.Website.Models.CustOrdersViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create A New Order</h1>
<<h2 style="color:white;">Orders MUST exist before you can edit them.</h2>

<h4 style="color:white;">New Customer Order</h4>
<hr />
<table class="table">
    <td>
        <td>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CustID" class="control-label" style="color: white; "></label>
                <input asp-for="CustID" class="form-control" style="color:black;" />
                <span asp-validation-for="CustID" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="LocationId" class="control-label" style="color: white; "></label>
                <input asp-for="LocationId" class="form-control" style="color:black;" />
                <span asp-validation-for="LocationId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
        <td style="width:60%;">
            @for (int i = 1; i < 8; i++)
            {
            <p>
                @TempData["HI"]="hello";
                <span class="form-group">
                    @*@{ List<TempSet> TypProdQtyObList = (List<TempSet>)TempData["TupProdQtyObjList"]; TempData.Keep(); }*@

                    <intput type="number" value=@TempData[Model.ProdTrippleList[i].Item2] min="0" />
                    
                    @*<input type="number" asp-for=@Model.TupProdQtyObjList[i].qty min="0" style="color:black">*@

                    @Html.TextBoxFor(m => m.TupProdQtyObjList[i], new { type = "number", min = "0", step = "1" })
                    
                    @*@Html.EditorFor(m => TypProdQtyObList[i].qty);*@
                    
                    @Html.DisplayFor(m => m.ProdTrippleList[i].Item3)
                </span>
                
            </p>
            }
        </td>
</tr>

    </table>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
